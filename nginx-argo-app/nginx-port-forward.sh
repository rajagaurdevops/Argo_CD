#!/bin/bash

# üè∑Ô∏è Argo CD application ‡§î‡§∞ Kubernetes service ‡§ï‡§æ ‡§®‡§æ‡§Æ
APP_NAME="nginx-demo"
SERVICE_NAME="nginx-service"
NAMESPACE="default"

# Argo CD app ‡§ï‡•ã sync ‡§ï‡§∞‡•ã (Git ‡§∏‡•á cluster ‡§§‡§ï changes apply ‡§π‡•ã‡§Ç‡§ó‡•á)
echo "Syncing ArgoCD app: $APP_NAME ..."
argocd app sync $APP_NAME

# 8080 ‡§∏‡•á ‡§∂‡•Å‡§∞‡•Ç ‡§ï‡§∞‡§ï‡•á ‡§ï‡•ã‡§à free local port ‡§¢‡•Ç‡§Ç‡§¢‡•ã (‡§ú‡•ã ‡§™‡§π‡§≤‡•á ‡§∏‡•á ‡§á‡§∏‡•ç‡§§‡•á‡§Æ‡§æ‡§≤ ‡§Æ‡•á‡§Ç ‡§®‡§æ ‡§π‡•ã)
echo " Searching for an available port..."
START_PORT=8080
END_PORT=9000
PORT_FOUND=0

# 8080 ‡§∏‡•á 9000 ‡§§‡§ï loop ‡§ö‡§≤‡§æ‡§ï‡§∞ ‡§™‡§π‡§≤‡§æ free port ‡§¢‡•Ç‡§Ç‡§¢‡§®‡§æ
for ((port=$START_PORT; port<=$END_PORT; port++)); do
    if ! lsof -i :$port >/dev/null 2>&1; then
        PORT_FOUND=$port
        break
    fi
done

# ‡§Ö‡§ó‡§∞ ‡§ï‡•ã‡§à ‡§≠‡•Ä port available ‡§®‡§π‡•Ä‡§Ç ‡§Æ‡§ø‡§≤‡§æ
if [ $PORT_FOUND -eq 0 ]; then
    echo "No free port found between $START_PORT and $END_PORT"
    exit 1
fi

# Kubernetes ‡§ï‡•Ä service ‡§ï‡•ã ‡§â‡§∏ free port ‡§™‡§∞ forward ‡§ï‡§∞‡•ã
echo " Forwarding service '$SERVICE_NAME' to http://localhost:$PORT_FOUND"
kubectl port-forward svc/$SERVICE_NAME $PORT_FOUND:80 -n $NAMESPACE

kubectl port-forward svc/argocd-server -n argocd 8080:443  :>  port forwarding
kubectl -n argocd get secret argocd-initial-admin-secret -o jsonpath="{.data.password}" | base64 -d
